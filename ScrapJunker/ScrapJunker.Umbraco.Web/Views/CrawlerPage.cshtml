@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using ContentModels = Umbraco.Web.PublishedContentModels
@using React.Web.Mvc
@{
    Layout = "MasterPage.cshtml";
}

@section Styles{
   <link rel="stylesheet" href="~/content/site/crawlerPage.css" />
    <style>
        #content > iframe{
            width : 100%;
        }
    </style>
}

<div class="row">
    <div class="col-md-4">
        <form class="input-group mb-2 mr-sm-2 mb-sm-0 pointer" method="POST" action="/umbraco/api/action/crawl">
            <button type="submit" class="input-group-addon bg-primary "><i class="fa fa-bug"> Crawl</i></button>
            <input type="text" name="url" class="form-control" id="inlineFormInputGroup" placeholder="http://www.example.com">
            <input type="hidden" name="id" value="@(((IPublishedContent)CurrentPage).Id)" />
        </form>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-4">
        @{
            Html.RenderPartial("Crawler/ChildListViewPartial", Model);
        }
    </div>
    <div class="col-md-8">
        <div class="row">
            <div class="col-md-8">
                <h2 id="content-title"></h2>
            </div>
            <div class="col-md-2 offset-2">
                <a id="content-href" class="btn btn-primary" href="" role="button"><i class="fa fa-link"></i></a>
            </div>
        </div>
        <div class="row">
            <hr id="content-hr" />
        </div>
        <div class="row">
            <div id="content" class="col-md-12">
                <iframe frameborder="0" scrolling="no"></iframe>
            </div>
        </div>
        @*@Html.React("contentpicker", new { })*@
    </div>
</div>

@Html.ReactInitJavaScript()
@section Scripts{
    <script src="~/jsx/content-picker.jsx" type="text/jsx"></script>


    <script>
        function squeezeFrame(iframe) {
            //if (self !== top) {
                //if (typeof myMax !== "number") { max = 0.1; } else { max = myMax; }
                //if (typeof myRedraw !== "string") myRedraw = "width";

                max = 0.1;
                myRedraw = "both";
                b = $(iframe).contents().find('body')[0];

                zW = (b.clientWidth - 5) / b.scrollWidth;

                if (myRedraw === "both") {
                    zH = (b.clientHeight) / b.scrollHeight;
                    if (zH < zW && zH < 1) { z = zH } else { z = zW };
                }
                else {
                    z = zW;
                }

                if (z > 1 + max) { z = 1 + max; } else if (z < 1 - max) { z = 1 - max; }

                s = "zoom:" + z + "; -moz-transform: scale(" + z + "); -moz-transform-origin: 0 0;";

                if (typeof b.setAttribute === "function") b.setAttribute('style', s);
                else if (typeof b.style.setAttribute === "object") b.style.setAttribute('cssText', s);


                $(iframe).height($(b).height());

            //} else {
            //    if (typeof myContainer === "string") { window.location = myContainer; }
            //}
        } 
       
    </script>


    <script type="text/javascript">
        $(function () {
            $("#accordion").accordion({ heightStyle: "content" });
            $("#content-hr").prop('hidden', true);

            //https://datatables.net/examples/basic_init/dom.html
            //http://legacy.datatables.net/usage/i18n
            $('.descendants').DataTable({
                "language": {
                    "lengthMenu": "_MENU_",
                    "info": "_PAGE_ / _PAGES_",
                    "infoEmpty": "0 / 0",
                    "search": "",
                    "paginate": {
                        "first": "",
                        "last": "",
                        "next": "<b>></b>",
                        "previous": "<b><</b>"
                    },
                    "searchPlaceholder": "Search...",
                    "infoFiltered": "",
                    "emptyTable": "No values"
                },

                "pageLength": 7,
                "lengthMenu": [[7], [7]],
                "pagingType": "simple",
                dom: "<'row'<'col-sm-2'p><'col-sm-8'f><'col-sm-2'i>>" +
                "<'row'<'col-sm-12'tr>>"
            });
        });

        $(".content").click(function () {

            var contentid = $(this).data("id");
            $.ajax({
                url: '/umbraco/api/content/get?publishedContentId=' + contentid,
                type: 'GET',
                beforeSend: function () {
                   // $("#content").LoadingOverlay("show");
                },
                success: function (result) {
                    toastr.success("Success!");

                    $("#content-title").html(result.Name);
                    $("#content-href").prop('href', result.Url);
                    $("#content > iframe").contents().find("body").html(result.Content);
                    squeezeFrame($("#content > iframe")[0]);

                },
                error: function (result) {
                    if (result.responseJSON.ModelState !== undefined) {
                        var errors = [];
                        for (var key in result.responseJSON.ModelState) {
                            for (var i = 0; i < result.responseJSON.ModelState[key].length; i++) {
                                errors.push(result.responseJSON.ModelState[key][i]);
                            }
                        }
                        toastr.error(errors);
                    }
                    else if (result.responseJSON.ExceptionMessage !== undefined) {
                        toastr.error(result.responseJSON.ExceptionMessage);
                    } else {
                        toastr.error(result.responseJSON.Message);
                    }
                },
                complete: function () {
                   // $("#content").LoadingOverlay("hide");
                }
            });
        });
    </script>

}